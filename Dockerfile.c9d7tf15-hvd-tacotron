FROM nvidia/cuda:9.0-cudnn7-devel-ubuntu16.04
#tag mean c9:CUDA Toolkit 9.0, d7:cuDNN7, tf15:Tensorflow R1.5.0
# TensorFlow version is tightly coupled to CUDA and cuDNN so it should be selected carefully
ENV TENSORFLOW_VERSION=1.5.0

#CUDA toolkit version
ENV CUDA_VERSION=9.0
ENV CUDNN VERSION=7
ENV NCCL_VERSION=2.1.2-1

# Python 2.7 or 3.5 is supported by Ubuntu Xenial out of the box
ENV PYTHON_VERSION=2.7

RUN echo "deb http://developer.download.nvidia.com/compute/machine-learning/repos/ubuntu1604/x86_64 /" > /etc/apt/sources.list.d/nvidia-ml.list

RUN apt-get update && apt-get install -y --no-install-recommends  --allow-downgrades \
        build-essential \
        cmake \
        git \
        curl \
        vim \
        wget \
        ca-certificates \
        libnccl2=$NCCL_VERSION+cuda$CUDA_VERSION \
        libnccl-dev=$NCCL_VERSION+cuda$CUDA_VERSION \
        libjpeg-dev \
        libpng-dev \
        python$PYTHON_VERSION \
        python$PYTHON_VERSION-dev

RUN ln -s /usr/bin/python$PYTHON_VERSION /usr/bin/python

RUN curl -O https://bootstrap.pypa.io/get-pip.py && \
    python get-pip.py && \
    rm get-pip.py




######## install dependency files for tacotron  #########
RUN pip install --no-cache-dir \
    appnope==0.1.0 \
    audioread==2.1.5 \
    beautifulsoup4==4.6.0 \
    bleach==1.5.0 \
    bs4==0.0.1 \
    cachetools==2.0.1 \
    certifi==2017.7.27.1 \
    chardet==3.0.4 \
    click==6.7 \
    cycler==0.10.0 \
    decorator==4.1.2 \
    dill==0.2.7.1 \
    ffprobe==0.5 \
    Flask==0.12.2 \
    Flask-Cors==3.0.3 \
    future==0.16.0 \
    gapic-google-cloud-datastore-v1==0.15.3 \
    gapic-google-cloud-error-reporting-v1beta1==0.15.3 \
    gapic-google-cloud-logging-v2==0.91.3 \
    gapic-google-cloud-pubsub-v1==0.15.4 \
    gapic-google-cloud-spanner-admin-database-v1==0.15.3 \
    gapic-google-cloud-spanner-admin-instance-v1==0.15.3 \
    gapic-google-cloud-spanner-v1==0.15.3 \
    google-auth==1.1.1 \
    google-cloud==0.27.0 \
    google-cloud-bigquery==0.26.0 \
    google-cloud-bigtable==0.26.0 \
    google-cloud-core==0.26.0 \
    google-cloud-datastore==1.2.0 \
    google-cloud-dns==0.26.0 \
    google-cloud-error-reporting==0.26.0 \
    google-cloud-language==0.27.0 \
    google-cloud-logging==1.2.0 \
    google-cloud-monitoring==0.26.0 \
    google-cloud-pubsub==0.27.0 \
    google-cloud-resource-manager==0.26.0 \
    google-cloud-runtimeconfig==0.26.0 \
    google-cloud-spanner==0.26.0 \
    google-cloud-speech==0.28.0 \
    google-cloud-storage==1.3.2 \
    google-cloud-translate==1.1.0 \
    google-cloud-videointelligence==0.25.0 \
    google-cloud-vision==0.26.0 \
    google-gax==0.15.15 \
    google-resumable-media==0.3.0 \
    googleapis-common-protos==1.5.3 \
    grpc-google-iam-v1==0.11.4 \
    grpcio==1.6.3 \
    html5lib==0.9999999 \
    httplib2==0.10.3 \
    idna==2.6 \
    ipdb==0.10.3 \
    ipython==6.2.1 \
    ipython-genutils==0.2.0 \
    iso8601==0.1.12 \
    itsdangerous==0.24 \
    jamo==0.4.1 \
    jedi==0.11.0 \
    Jinja2==2.9.6 \
    joblib==0.11 \
    librosa==0.5.1 \
    llvmlite==0.20.0 \
    m3u8==0.3.3 \
    Markdown==2.6.9 \
    MarkupSafe==1.0 \
    matplotlib==2.1.0 \
    monotonic==1.3 \
    nltk==3.2.5 \
    numba==0.35.0 \
    numpy==1.13.3 \
    oauth2client==3.0.0 \
    parso==0.1.0 \
    pexpect==4.2.1 \
    pickleshare==0.7.4 \
    ply==3.8 \
    prompt-toolkit==1.0.15 \
    proto-google-cloud-datastore-v1==0.90.4 \
    proto-google-cloud-error-reporting-v1beta1==0.15.3 \
    proto-google-cloud-logging-v2==0.91.3 \
    proto-google-cloud-pubsub-v1==0.15.4 \
    proto-google-cloud-spanner-admin-database-v1==0.15.3 \
    proto-google-cloud-spanner-admin-instance-v1==0.15.3 \
    proto-google-cloud-spanner-v1==0.15.3 \
    protobuf==3.4.0 \
    ptyprocess==0.5.2 \
    pyasn1==0.3.7 \
    pyasn1-modules==0.1.5 \
    pydub==0.20.0 \
    Pygments==2.2.0 \
    pyparsing==2.2.0 \
    python-dateutil==2.6.1 \
    pytz==2017.2 \
    requests==2.18.4 \
    resampy==0.2.0 \
    rsa==3.4.2 \
    scikit-learn==0.19.0 \
    scipy==0.19.1 \
    simplegeneric==0.8.1 \
    six==1.11.0 \
    tenacity==4.4.0 \
    #tensorflow-gpu==1.3.0 \
    #tensorflow-tensorboard==0.1.8 \
    tinytag==0.18.0 \
    tqdm==4.19.2 \
    traitlets==4.3.2 \
    urllib3==1.22 \
    wcwidth==0.1.7 \
    Werkzeug==0.12.2 \
    youtube-dl==2017.10.15.1 \
    unidecode==1.0.22 \
    inflect==0.2.5 


# Install Open MPI
RUN mkdir /tmp/openmpi && \
    cd /tmp/openmpi && \
    wget https://www.open-mpi.org/software/ompi/v3.0/downloads/openmpi-3.0.0.tar.gz && \
    tar zxf openmpi-3.0.0.tar.gz && \
    cd openmpi-3.0.0 && \
    ./configure --enable-orterun-prefix-by-default && \
    make -j $(nproc) all && \
    make install && \
    ldconfig && \
    rm -rf /tmp/openmpi

#Install Tensorflow and Keras after OpenMPI Install
RUN pip install --no-cache-dir tensorflow-gpu==$TENSORFLOW_VERSION
RUN pip install --no-cache-dir keras
RUN pip install --no-cache-dir h5py


# Install Horovod, temporarily using CUDA stubs
RUN ldconfig /usr/local/cuda-$CUDA_VERSION/targets/x86_64-linux/lib/stubs && \
    HOROVOD_GPU_ALLREDUCE=NCCL pip install --no-cache-dir horovod && \
    ldconfig

# Create a wrapper for OpenMPI to allow running as root by default
RUN mv /usr/local/bin/mpirun /usr/local/bin/mpirun.real && \
    echo '#!/bin/bash' > /usr/local/bin/mpirun && \
    echo 'mpirun.real --allow-run-as-root "$@"' >> /usr/local/bin/mpirun && \
    chmod a+x /usr/local/bin/mpirun

# Configure OpenMPI to run good defaults:
#   --bind-to none --map-by slot --mca btl_tcp_if_exclude lo,docker0
RUN echo "hwloc_base_binding_policy = none" >> /usr/local/etc/openmpi-mca-params.conf && \
    echo "rmaps_base_mapping_policy = slot" >> /usr/local/etc/openmpi-mca-params.conf && \
    echo "btl_tcp_if_exclude = lo,docker0" >> /usr/local/etc/openmpi-mca-params.conf

# Set default NCCL parameters
RUN echo NCCL_DEBUG=INFO >> /etc/nccl.conf && \
    echo NCCL_SOCKET_IFNAME=^docker0 >> /etc/nccl.conf

# Install OpenSSH for MPI to communicate between containers
RUN apt-get install -y --no-install-recommends openssh-client openssh-server && \
    mkdir -p /var/run/sshd

# Allow OpenSSH to talk to containers without asking for confirmation
RUN cat /etc/ssh/ssh_config | grep -v StrictHostKeyChecking > /etc/ssh/ssh_config.new && \
    echo "    StrictHostKeyChecking no" >> /etc/ssh/ssh_config.new && \
    mv /etc/ssh/ssh_config.new /etc/ssh/ssh_config



#############################################################
RUN  git clone      https://github.com/carpedm20/multi-speaker-tacotron-tensorflow.git 

# Download examples
RUN apt-get install -y --no-install-recommends subversion && \
    svn checkout https://github.com/uber/horovod/trunk/examples && \
    rm -rf /examples/.svn

WORKDIR "/examples"

